package com.training.dao;
// default package
// Generated Sep 13, 2016 5:13:51 PM by Hibernate Tools 5.1.0.Beta1

import java.io.Serializable;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * WishList generated by hbm2java
 */
@Entity
@Table(name = "wish_list", catalog = "onlinelibrary")
public class WishList implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private WishListId id;
	private LibraryItems libraryItems;
	private MemberDetails memberDetails;
	private int wishStatus;
	private Date createdTime;
	private Date modifiedTime;

	public WishList() {
	}

	public WishList(WishListId id, LibraryItems libraryItems, MemberDetails memberDetails, int wishStatus, Date createdTime,
			Date modifiedTime) {
		this.id = id;
		this.libraryItems = libraryItems;
		this.memberDetails = memberDetails;
		this.wishStatus = wishStatus;
		this.createdTime = createdTime;
		this.modifiedTime = modifiedTime;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "memberId", column = @Column(name = "member_id", nullable = false)),
			@AttributeOverride(name = "itemId", column = @Column(name = "item_id", nullable = false, length = 8)) })
	public WishListId getId() {
		return this.id;
	}

	public void setId(WishListId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_id", nullable = false, insertable = false, updatable = false)
	public LibraryItems getLibraryItems() {
		return this.libraryItems;
	}

	public void setLibraryItems(LibraryItems libraryItems) {
		this.libraryItems = libraryItems;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "member_id", nullable = false, insertable = false, updatable = false)
	public MemberDetails getMemberDetails() {
		return this.memberDetails;
	}

	public void setMemberDetails(MemberDetails memberDetails) {
		this.memberDetails = memberDetails;
	}

	@Column(name = "wish_status", nullable = false)
	public int getWishStatus() {
		return this.wishStatus;
	}

	public void setWishStatus(int wishStatus) {
		this.wishStatus = wishStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "c_time", nullable = false, length = 19)
	public Date getcreatedTime() {
		return this.createdTime;
	}

	public void setcreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "m_time", nullable = false, length = 19)
	public Date getmodifiedTime() {
		return this.modifiedTime;
	}

	public void setmodifiedTime(Date modifiedTime) {
		this.modifiedTime = modifiedTime;
	}

}
